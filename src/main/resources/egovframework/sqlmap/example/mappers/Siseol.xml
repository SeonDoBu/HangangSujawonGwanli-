<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.sample.service.impl.SiseolMapper">

	<select id="siseolCount" parameterType="Siseol" resultType="int">
		select count(*)
		from    siseol
		<where>
			<if test="big_code != 0">
				 big_code = #{big_code}
			</if>
			<if test="small_code != 0">
				  AND small_code = #{small_code}
			</if>
			<if test="district_id != 0">
				  AND district_id = #{district_id}
			</if>
			<if test="gigwan_id != 0">
				  AND gigwan_id   = #{gigwan_id}
			</if>
			<if test="siseol_id != 0">
				  AND siseol_id   = #{siseol_id}
			</if>
		</where>   
	</select>
	
	<select id="siseolList" parameterType="Siseol" resultType="Siseol">
		SELECT b.*
		FROM
		(
			SELECT  ROW_NUMBER() OVER (ORDER BY siseol_id) AS rn, a.*
			FROM
			   (
				SELECT s.*, d.name AS districtName, g.name AS gigwanName, c.content AS siseolName
				FROM SISEOL s
				JOIN COMMONCODE c ON s.small_code = c.small_code AND s.big_code = c.big_code
				JOIN DISTRICT d ON s.district_id = d.district_id
				JOIN GIGWAN g ON s.gigwan_id = g.gigwan_id
				<where>
					<if test="big_code != 0">
						 s.big_code = #{big_code}
					</if>
					<if test="small_code != 0">
						  AND s.small_code = #{small_code}
					</if>
					<if test="district_id != 0">
						  AND s.district_id = #{district_id}
					</if>
					<if test="gigwan_id != 0">
						  AND s.gigwan_id   = #{gigwan_id}
					</if>
					<if test="siseol_id != 0">
						  AND s.siseol_id   = #{siseol_id}
					</if>
				</where> 
				)a
		)b
		WHERE rn BETWEEN #{start} and #{end}
	</select>
	
	<select id="commonList" resultType="Commoncode">
		SELECT *
		FROM Commoncode
		WHERE big_code = 2
		AND NOT (small_code = 999);
	</select>
	
	<select id="districtList" resultType="District">
		select *
		from   District
	</select>
	
	<select id="gigwanList" resultType="Gigwan">
		select *
		from   Gigwan
	</select>
	
	<!-- 시설물 코드에 해당하는 시설물의 정보를 조회 by 나희 -->
	<select id="siseolDetail" parameterType="int" resultType="Siseol">
		SELECT s.*,
	   		   (SELECT content FROM commoncode c WHERE c.big_code = s.big_code AND c.small_code = s.small_code) AS siseolName,
	   		   (SELECT name FROM gigwan g WHERE g.gigwan_id = s.gigwan_id) AS gigwanName, 
	   		   (SELECT name FROM district d WHERE d.district_id = s.district_id) AS districtName
		FROM   siseol s
		WHERE  s.siseol_id = #{siseolId}
	</select>
	
	<insert id="inspectionInsert" parameterType="Inspection" >
		INSERT INTO INSPECTION (insp_id, user_id, siseol_id, insp_date, weather, insp_result, special_note, insp_record,
		up1_score, up1_note, up2_score, up2_note, up3_score, up3_note, up4_score, up4_note, down1_score, down1_note,
		down2_score, down2_note, down3_score, down3_note, down4_score, down4_note, inspec1_score, inspec1_note,
		inspec2_score, inspec2_note)
		VALUES
		(nextval('seq_inspection'), #{user_id}, #{siseol_id}, #{insp_date}, #{weather}, #{insp_result}, #{special_note}, #{insp_record}, 
		#{up1_score}, #{up1_note}, #{up2_score}, #{up2_note}, #{up3_score}, #{up3_note}, #{up4_score}, #{up4_note}, 
		#{down1_score}, #{down1_note}, #{down2_score}, #{down2_note}, #{down3_score}, #{down3_note}, #{down4_score}, #{down4_note}, 
		#{inspec1_score}, #{inspec1_note}, #{inspec2_score}, #{inspec2_note});
	</insert>
	

	<!-- 시설물 정보 insert by 나희 -->
	<insert id="siseolInsert" parameterType="Siseol">
		INSERT INTO siseol(siseol_id, big_code, small_code, district_id, gigwan_id, mapx, mapy, address, is_deleted) 
		VALUES(#{siseol_id}, 2, #{small_code}, #{district_id}, #{gigwan_id}, #{mapx}, #{mapy}, #{address}, 0)
	</insert>
	
	<!-- 시설물 정보 update by 나희 -->
	<update id="siseolUpdate" parameterType="Siseol">
		UPDATE siseol
		SET    small_code = #{small_code}, district_id = #{district_id}, gigwan_id = #{gigwan_id},
		       mapx = #{mapx}, mapy = #{mapy}, address = #{address}
		WHERE  siseol_id = #{siseol_id}
	</update>
	
	<!-- 시설물 정보 delete(is_deleted 값 변경) by 나희 -->
	<update id="siseolDelete" parameterType="int">
		UPDATE siseol
		SET    is_deleted = '1'
		WHERE  siseol_id = #{siseolId}
	</update>

	<select id="userList" resultType="Users">
		select dept
		from users
		GROUP BY dept
	</select>


	<select id="inspectionCount" resultType="int">
		select count(*)
		from inspection
	</select>
	
	<select id="inspectionList" resultType="int">
		SELECT b.*
		FROM
		(
			SELECT  ROW_NUMBER() OVER (ORDER BY insp_date) AS rn, a.*
			FROM
			   (
				SELECT s.*, i.insp_date, i.user_id, d.name AS districtName, g.name AS gigwanName, c.content AS siseolName
				FROM inspection i
				JOIN SISEOL s ON s.siseol_id = i.siseol_id
				JOIN COMMONCODE c ON s.small_code = c.small_code AND s.big_code = c.big_code
				JOIN DISTRICT d ON s.district_id = d.district_id
				JOIN GIGWAN g ON s.gigwan_id = g.gigwan_id
				<where>
					<if test="big_code != 0">
						 s.big_code = #{big_code}
					</if>
					<if test="small_code != 0">
						  AND s.small_code = #{small_code}
					</if>
					<if test="district_id != 0">
						  AND s.district_id = #{district_id}
					</if>
					<if test="gigwan_id != 0">
						  AND s.gigwan_id   = #{gigwan_id}
					</if>
					<if test="siseol_id != 0">
						  AND s.siseol_id   = #{siseol_id}
					</if>
					
				</where> 
				)a
		)b
		WHERE rn BETWEEN #{start} and #{end}
	</select>
	
	<!-- 시설물 종류별로 시설물 수 구하기 by 나희 -->
	<select id="getSiseolCount" parameterType="int" resultType="int">
		SELECT count(*)
		FROM   siseol
		WHERE  small_code = #{smallCode}
	</select>
	
	<select id="getSiseolData" parameterType="map" resultType="Siseol">
		SELECT *
		FROM   siseol
		WHERE  1=0
		<if test="sc1 == 1">
			OR small_code = 1
		</if>
		<if test="sc2 == 1">
			OR small_code = 2
		</if>
		<if test="sc3 == 1">
			OR small_code = 3
		</if>
		<if test="sc4 == 1">
			OR small_code = 4
		</if>
	</select>

</mapper>